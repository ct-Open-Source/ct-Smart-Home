name: Build Release

on:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: "0 10 * * 1" # Update the image every Monday morning to provide regular updates

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node_version: [10, 12, 14]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout latest release
        run: git checkout $(git describe --tags `git rev-list --tags --max-count=1`) -b latest-release
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.PACKAGES_USER }}
          password: ${{ secrets.PACKAGES_TOKEN }}
          registry: ghcr.io
      - name: Cache Docker layers
        uses: actions/cache@v2.1.5
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Run Buildx
        run: |
          if [ ${{ matrix.node_version }} -eq "12" ]; then
              export LATEST="-t ctmagazin/ctnodered:latest -t ghcr.io/ct-open-source/ctnodered:latest"
          fi
          docker buildx build \
            --platform linux/amd64,linux/arm/v7,linux/arm64,linux/arm/v6 \
            -o type=registry \
            -t ctmagazin/ctnodered:$(git describe --tags `git rev-list --tags --max-count=1`)-${{ matrix.node_version }} \
            -t ctmagazin/ctnodered:latest-${{ matrix.node_version }} \
            -t ghcr.io/ct-open-source/ctnodered:$(git describe --tags `git rev-list --tags --max-count=1`)-${{ matrix.node_version }} \
            -t ghcr.io/ct-open-source/ctnodered:latest-${{ matrix.node_version }} \
            $LATEST \
            --build-arg NODE_VERSION=${{ matrix.node_version }} \
            --build-arg NODE_RED_VERSION=latest \
            --build-arg OS=alpine \
            --build-arg BUILD_DATE="$(date +"%Y-%m-%dT%H:%M:%SZ")" \
            --build-arg TAG_SUFFIX=latest-${{ matrix.node_version }} \
            --file ./docker-image/Dockerfile ./docker-image
